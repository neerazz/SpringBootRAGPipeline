package com.example.ragdemo;

import org.springframework.ai.chat.ChatClient;
import org.springframework.ai.chat.ChatResponse;
import org.springframework.ai.chat.Generation;
import org.springframework.ai.chat.prompt.Prompt;
import org.springframework.ai.embedding.EmbeddingClient;
import org.springframework.ai.embedding.EmbeddingResponse;
import org.springframework.boot.test.context.TestConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Primary;
import org.springframework.context.annotation.Profile;

import java.util.List;
import java.util.Random;

@TestConfiguration
@Profile("test")
public class TestConfig {

    @Bean
    @Primary
    public EmbeddingClient mockEmbeddingClient() {
        return request -> {
            Random random = new Random();
            List<Double> embedding = random.doubles(1536).boxed().toList();
            return new EmbeddingResponse(List.of(new org.springframework.ai.embedding.Embedding(embedding, 0)));
        };
    }

    @Bean
    @Primary
    public ChatClient mockChatClient() {
        return new ChatClient() {
            @Override
            public ChatResponse call(Prompt prompt) {
                String response = "This is a mock response for testing. " +
                        "In a real scenario, this would be generated by the LLM.";
                Generation generation = new Generation(response);
                return new ChatResponse(List.of(generation));
            }
        };
    }
}
